{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "C/C++: cl.exe build executable",
            "command": "cl.exe",
            "args": [
                "/MD",
                "/GS",
                "/O2",
                "/Zi",
                "/EHsc",
                "/Fe:${fileDirname}\\${fileBasenameNoExtension}.exe",
                "${file}",
                "/I${workspaceFolder}\\include",
                "/link",
                "/LIBPATH:${workspaceFolder}\\lib\\static-lib",
                "librabe_ffi.lib",
                "cryptlib.lib", //CryptoPP890 Library
                "bcrypt.lib", // Provides cryptographic functions (Windows system libraries)
                "advapi32.lib", // Provides advanced API services including security and registry functions (Windows system libraries)
                "ntdll.lib", // Windows system libraries
                "/MACHINE:X64"
            ],
            "problemMatcher": ["$msCompile"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task to build executable."
        },
        {
            "type": "shell",
            "label": "C/C++: cl.exe build dynamic linking library (DLL)",
            "command": "cl.exe",
            "args": [
                "/MD",
                "/GS",
                "/O2",
                "/Zi",
                "/EHsc",
                "/LD",  // for build DLL
                "/DBUILD_DLL", // define macro BUILD_DLL
                "/Fe:${fileDirname}\\${fileBasenameNoExtension}.dll",
                "${file}",
                "/I${workspaceFolder}\\include",
                "/link",
                "/LIBPATH:${workspaceFolder}\\lib\\static-lib",
                "librabe_ffi.lib",
                "cryptlib.lib", //CryptoPP890 Library
                "bcrypt.lib", // Provides cryptographic functions (Windows system libraries)
                "advapi32.lib", // Provides advanced API services including security and registry functions (Windows system libraries)
                "ntdll.lib", // Windows system libraries
                "/MACHINE:X64"
            ],
            "problemMatcher": ["$msCompile"],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "C/C++: cl.exe build dynamic linking library (DLL)"
        },
        {
            "type": "shell",
            "label": "C/C++: cl.exe build static library",
            "command": "cl.exe",
            "args": [
                "/MD",
                "/GS",
                "/O2",
                "/Zi",
                "/EHsc",
                "/DBUILD_DLL", // define macro BUILD_DLL
                "/c",  // Compile without linking
                "${file}",
                "/I${workspaceFolder}\\include"
            ],
            "problemMatcher": ["$msCompile"],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "Task to build static library."
        },
        {
            "type": "shell",
            "label": "C/C++: lib.exe create static library",
            "command": "lib.exe",
            "args": [
                "/OUT:${fileDirname}\\${fileBasenameNoExtension}.lib",
                "${fileDirname}\\${fileBasenameNoExtension}.obj",
                "/LIBPATH:${workspaceFolder}\\lib\\static-lib",
                "librabe_ffi.lib",
                "cryptlib.lib", //CryptoPP890 Library
                "bcrypt.lib", // Provides cryptographic functions (Windows system libraries)
                "advapi32.lib", // Provides advanced API services including security and registry functions (Windows system libraries)
                "ntdll.lib", // Windows system libraries
            ],
            "problemMatcher": ["$msCompile"],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "Task to create static library."
        }
    ]
}